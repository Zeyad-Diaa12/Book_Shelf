@model IEnumerable<BookShelf.Application.DTOs.BookDto>

@{
    ViewData["Title"] = "Books";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Books</h1>
        <div>
            <a asp-action="Create" class="btn btn-primary">Add New Book</a>
        </div>
    </div>
    
    <div class="mb-4">
        <form asp-action="Search" method="get" class="input-group">
            <input type="text" name="searchTerm" class="form-control" 
                   placeholder="Search by title, author, or ISBN" 
                   value="@(ViewData["SearchTerm"])">
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form>
    </div>

    @if (ViewData["SearchTerm"] != null)
    {
        <div class="mb-4">
            <h4>Search results for: <span class="text-primary">@ViewData["SearchTerm"]</span></h4>
            <a asp-action="Index" class="btn btn-sm btn-outline-secondary">Clear Search</a>
        </div>
    }

    <div class="row">
        @if (Model.Any())
        {
            @foreach (var book in Model)
            {
                <div class="col-md-3 mb-4">
                    <div class="card h-100">
                        <img src="@(string.IsNullOrEmpty(book.CoverImageUrl) ? "/images/default-book-cover.jpg" : book.CoverImageUrl)" 
                             class="card-img-top" alt="@book.Title" style="height: 250px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@book.Author</h6>
                            <p class="card-text text-truncate" title="@book.Description">
                                @book.Description
                            </p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <span class="badge bg-secondary">@book.PageCount pages</span>
                                </div>
                                <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-sm btn-primary">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">
                    No books found. @(ViewData["SearchTerm"] != null ? "Try a different search term." : "Start by adding some books!")
                </div>
            </div>
        }
    </div>
</div>